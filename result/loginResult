{"urls":{"014bf8de-ef2b-11ec-a93e-0242ac11000a":"http://www.tyleisure.co.kr/mobile/member/m_login.jsp?hid_BlocNo=02"},"scripts":{"014bf8de-ef2b-11ec-a93e-0242ac11000a":"javascript:(() => {\n    /* test */\nconst log = console.log;\nconst dir = console.dir;\nconst doc = document;\nconst ls = localStorage;\nconst OUTER_ADDR_HEADER = \"https://dev.mnemosyne.co.kr\";\nconst LOGID = new Date().getTime();\nconst logParam = {\n  type: \"command\",\n  sub_type: \"\",\n  device_id: \"${deviceId}\",\n  device_token: \"${deviceToken}\",\n  golf_club_id: \"014bf8de-ef2b-11ec-a93e-0242ac11000a\",\n  message: \"\",\n  parameter: JSON.stringify({ LOGID }),\n};\nlet ac = false;\ntry {\n  ac = window.AndroidController || window.webkit.messageHandlers.iosController;\n  ac.message =\n    ac.message || window.webkit.messageHandlers.iosController.postMessage;\n} catch (e) {\n  ac = false;\n}\n\nconst splitter = location.href.indexOf(\"?\") == -1 ? \"#\" : \"?\";\nconst aDDr = location.href.split(splitter)[0];\nconst suffix = location.href.split(splitter)[1];\nconst dictSplitter = { \"#\": \"?\", \"?\": \"#\" };\nlet addr = aDDr;\nif (aDDr.indexOf(dictSplitter[splitter]) != -1)\n  addr = aDDr.split(dictSplitter[splitter])[0];\n\nEXTZLOG(\"url\", \"raw addr :: \" + location.href);\nEXTZLOG(\"url\", \"aDDr :: \" + aDDr);\nEXTZLOG(\"url\", \"addr :: \" + addr);\n\nfunction LSCHK(str, sec) {\n  const tag = lsg(str);\n  log(\"time check\", new Date().getTime() - tag, 1000 * sec);\n  if (tag && new Date().getTime() - tag < 1000 * sec) return false;\n  lss(str, new Date().getTime());\n  return true;\n}\nfunction TZLOG(param, callback) {\n  const addr = OUTER_ADDR_HEADER + \"/api/reservation/newLog\";\n  post(addr, param, { \"Content-Type\": \"application/json\" }, (data) => {\n    if (callback) callback(data);\n  });\n}\nfunction EXTZLOG(subtype, message, param) {\n  logParam.sub_type = subtype;\n  logParam.message = message;\n  if (param) logParam.parameter = JSON.stringify(param);\n  TZLOG(logParam);\n}\nfunction post(addr, param, header, callback) {\n  var a = new ajaxcallforgeneral(),\n    str = [];\n  if (header[\"Content-Type\"] == \"application/json\") {\n    str = JSON.stringify(param);\n  } else {\n    for (var el in param) str.push(el + \"=\" + encodeURIComponent(param[el]));\n    str = str.join(\"&\");\n  }\n  a.post(addr, str, header);\n  a.ajaxcallback = callback;\n}\nfunction get(addr, param, header, callback) {\n  var a = new ajaxcallforgeneral(),\n    str = [];\n  for (var el in param) {\n    str.push(el + \"=\" + param[el]);\n  }\n  str = str.join(\"&\");\n  a.jAjax(addr + \"?\" + str, header);\n  a.ajaxcallback = callback;\n}\nfunction ajaxcallforgeneral() {\n  this.xmlHttp;\n  var j = this;\n  var HTTP = {};\n  var ADDR;\n  var PARAM;\n  var HEADER;\n  this.jAjax = function (address, header) {\n    j.xmlHttp = new XMLHttpRequest();\n    j.xmlHttp.onreadystatechange = on_ReadyStateChange;\n    j.xmlHttp.onerror = onError;\n    j.xmlHttp.open(\"GET\", address, true);\n    if (header) {\n      Object.keys(header).forEach((key) => {\n        var val = header[key];\n        j.xmlHttp.setRequestHeader(key, val);\n      });\n    }\n    j.xmlHttp.send(null);\n  };\n  this.post = function (addr, prm, header) {\n    j.xmlHttp = new XMLHttpRequest();\n    j.xmlHttp.onreadystatechange = on_ReadyStateChange;\n    j.xmlHttp.onerror = onError;\n    j.xmlHttp.open(\"POST\", addr, true);\n\n    if (header) {\n      if (header[\"Content-Type\"])\n        Object.keys(header).forEach((key) => {\n          var val = header[key];\n          j.xmlHttp.setRequestHeader(key, val);\n        });\n      else\n        j.xmlHttp.setRequestHeader(\n          \"Content-Type\",\n          \"application/x-www-form-urlencoded\"\n        );\n    } else {\n      j.xmlHttp.setRequestHeader(\n        \"Content-Type\",\n        \"application/x-www-form-urlencoded\"\n      );\n    }\n\n    ADDR = addr;\n    PARAM = prm;\n    HEADER = JSON.stringify(header);\n\n    j.xmlHttp.send(prm);\n  };\n  this.file = function (addr, prm) {\n    j.xmlHttp = new XMLHttpRequest();\n    j.xmlHttp.onreadystatechange = on_ReadyStateChange;\n    j.xmlHttp.open(\"POST\", addr, true);\n    j.xmlHttp.send(prm);\n  };\n  function onError() {}\n  function on_ReadyStateChange() {\n    if (j.xmlHttp.readyState == 4) {\n      if (j.xmlHttp.status == 200) {\n        var data = j.xmlHttp.responseText;\n        j.ajaxcallback(data);\n      } else {\n      }\n    }\n  }\n}\nfunction lsg(str) {\n  return localStorage.getItem(str);\n}\nfunction lss(key, val) {\n  return localStorage.setItem(key, val);\n}\nfunction lsr(str) {\n  return localStorage.removeItem(str);\n}\nfunction lsc() {\n  const keys = Object.keys(localStorage);\n  keys.forEach((key) => {\n    if (key.indexOf(\"TZ_\") == -1) return;\n    lsr(key);\n  });\n}\nString.prototype.gt = function (num) {\n  return this.substring(this.length - num, this.length);\n};\nString.prototype.gh = function (num) {\n  return this.substring(0, num);\n};\nString.prototype.ct = function (num) {\n  return this.substring(0, this.length - num);\n};\nString.prototype.ch = function (num) {\n  return this.substring(num, this.length);\n};\nString.prototype.addzero = function () {\n  if (this.length == 1) return \"0\" + this;\n  return this;\n};\nString.prototype.inparen = function (opt) {\n  const regex = /.+?\\((.+)\\)/;\n  const str = this.toString();\n  const result = [];\n  const org = regex.exec(str)[1];\n  if (opt) {\n    let ar = [];\n    let flg = false;\n    Array.from(org).forEach((chr) => {\n      if (chr == \"'\") {\n        flg = !flg;\n      } else if (chr == \",\") {\n        if (flg) {\n          ar.push(chr);\n        } else {\n          result.push(ar.join(\"\"));\n          ar = [];\n        }\n      } else {\n        ar.push(chr);\n      }\n    });\n    if (ar.length > 0) {\n      result.push(ar.join(\"\"));\n      ar = [];\n    }\n  } else {\n    org\n      .split(\"'\")\n      .join(\"\")\n      .split(\",\")\n      .forEach((str) => {\n        result.push(str.trim());\n      });\n  }\n  return result;\n};\nString.prototype.datify = function (sign) {\n  const str = this.toString();\n  if (!sign) sign = \"-\";\n  return [str.gh(4), str.ch(4).gh(2), str.gt(2)].join(sign);\n};\nString.prototype.getFee = function () {\n  let str = this.toString();\n  str = str.replace(/[^0-9]/g, \"\");\n  return str * 1;\n};\nString.prototype.daySign = function () {\n  const str = this.getFee().toString();\n  const num = new Date(str.datify()).getDay();\n  let sign;\n  if (num == 0) sign = 3;\n  else if (num == 6) sign = 2;\n  else sign = 1;\n  return sign.toString();\n};\nString.prototype.dayNum = function () {\n  const str = this.getFee().toString();\n  const num = new Date(str.datify()).getDay();\n  return (num + 1).toString();\n};\nString.prototype.dayKor = function () {\n  const str = this.getFee().toString();\n  const num = new Date(str.datify()).getDay();\n  const week = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\n  return week[num];\n};\nString.prototype.rm = function (str) {\n  return this.split(str).join(\"\");\n};\nString.prototype.fillzero = function (sep) {\n  const ar = this.split(sep);\n  const result = [];\n  ar.forEach((el) => {\n    result.push(el.addzero());\n  });\n\n  return result.join(\"\");\n};\nString.prototype.jp = function () {\n  return JSON.parse(this);\n};\nString.prototype.regex = function (re) {\n  return re.exec(this);\n};\nString.prototype.gup = function () {\n  /*get url param*/\n  const param = {};\n  this.split(\"?\")[1]\n    .split(\"&\")\n    .forEach((str) => {\n      const [key, val] = str.split(\"=\");\n      param[key] = val;\n    });\n  return param;\n};\nString.prototype.sort = function () {\n  return Array.from(this).sort().join(\"\");\n};\nString.prototype.vector = function () {\n  /* 정렬한 뒤, 겹치는 글자는 뺀다. */\n  const res = {};\n  Array.from(this)\n    .sort()\n    .forEach((chr) => (res[chr] = true));\n  return Object.keys(res).join(\"\");\n};\nString.prototype.comp = function (str) {\n  let a = Array.from(this);\n  let b = Array.from(str);\n  let c;\n  if (b.length > a.length) {\n    c = a;\n    a = b;\n    b = c;\n    c = undefined;\n  }\n\n  const res = [];\n\n  exec();\n\n  function exec() {\n    let flg = false;\n    let cur = b.shift();\n    let tmp = [];\n    a.forEach((chr) => {\n      if (chr == cur) {\n        flg = true;\n        tmp.push(cur);\n        cur = b.shift();\n      } else {\n        if (flg) {\n          flg = false;\n          if (tmp.length > 0) {\n            res.push(tmp);\n            tmp = [];\n          }\n          if (cur != undefined) {\n            b.unshift(cur);\n            exec();\n          }\n        }\n      }\n    });\n    if (tmp.length > 0) {\n      res.push(tmp);\n      if (cur != undefined) {\n        b.unshift(cur);\n        exec();\n      }\n    }\n  }\n  return res;\n};\nHTMLElement.prototype.str = function () {\n  return this.innerText;\n};\nHTMLElement.prototype.add = function (tag) {\n  const el = document.createElement(tag);\n  this.appendChild(el);\n  return el;\n};\nHTMLElement.prototype.attr = function (str) {\n  return this.getAttribute(str);\n};\nHTMLElement.prototype.gcn = function (str) {\n  const els = this.getElementsByClassName(str);\n  return Array.from(els);\n};\nHTMLElement.prototype.gtn = function (str) {\n  const els = this.getElementsByTagName(str);\n  return Array.from(els);\n};\nHTMLElement.prototype.gbn = function (str) {\n  const els = this.getElementsByName(str);\n  return Array.from(els);\n};\nHTMLElement.prototype.str = function (str) {\n  return this.innerText;\n};\nHTMLElement.prototype.trav = function (fnc) {\n  fnc(this);\n  var a = this.children.length;\n  for (var i = 0; i < a; i++) {\n    if (this.children[i].trav) this.children[i].trav(fnc);\n  }\n};\nHTMLElement.prototype.gba = function (attr, val, opt) {\n  /* getElementsByAttribute */\n  const res = [];\n  this.trav((el) => {\n    const str = el.attr(attr);\n    if (!str) return;\n    if (opt) {\n      if (str.indexOf(val) != -1) res.push(el);\n    } else {\n      if (str == val) res.push(el);\n    }\n  });\n  return res;\n};\nHTMLElement.prototype.nm = function () {\n  /* node move */\n  const args = Array.from(arguments);\n  const up = args.shift();\n  let el = this;\n  for (let i = 0; i < up; i++) {\n    const p = el.parentNode;\n    if (p) el = p;\n  }\n\n  args.forEach((num) => {\n    const p = el.children[num];\n    if (p) el = p;\n  });\n\n  return el;\n};\ndocument.gcn = function (str) {\n  const els = this.getElementsByClassName(str);\n  return Array.from(els);\n};\ndocument.gtn = function (str) {\n  const els = this.getElementsByTagName(str);\n  return Array.from(els);\n};\ndocument.gbn = function (str) {\n  const els = this.getElementsByName(str);\n  return Array.from(els);\n};\ndocument.clm = function (str) {\n  return document.createElement(str);\n};\ndocument.gba = function (attr, val, opt) {\n  /* getElementsByAttribute */\n  const res = [];\n  this.body.trav((el) => {\n    const str = el.attr(attr);\n    if (!str) return;\n    if (opt) {\n      if (str.indexOf(val) != -1) res.push(el);\n    } else {\n      if (str == val) res.push(el);\n    }\n  });\n  return res;\n};\nwindow.timer = function (time, callback) {\n  setTimeout(callback, time);\n};\n/* 이 부분 자리 옮기지 마시오.*/\nconsole.clear();\n\n\nlogParam.sub_type = \"login\";\nlogParam.message = \"start login\";\nTZLOG(logParam, (data) => {}); \n\nmain();\nfunction main() {\n    /*if (precheck()) return;*/\n    var tLoginCount = 0;\nlog(\"tLoginCount\", tLoginCount);\nconst tLogin = setInterval(timeraction, 1000);\ntimeraction();\nfunction timeraction() {\n  if (!window[\"oldMembNo\"]) {\n    tLoginCount++;\n    log(\"tLoginCount\", tLoginCount);\n    if (tLoginCount > 4) clearInterval(tLogin);\n    return;\n  }\n  clearInterval(tLogin);\n  if (precheck()) return;\n  oldMembNo.value = \"${login_id}\";\n  pw.value = \"${login_password}\";\n  login();\n}\n\n};\nfunction precheck() {};  \n})();"},"procProcs":{"014bf8de-ef2b-11ec-a93e-0242ac11000a":"재로그인"},"procLandingLinks":{"014bf8de-ef2b-11ec-a93e-0242ac11000a":""},"procMessages":{"014bf8de-ef2b-11ec-a93e-0242ac11000a":""},"procResults":{"014bf8de-ef2b-11ec-a93e-0242ac11000a":"n"}}